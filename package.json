{
    "name": "deko-tree-overviewing",
    "displayName": "STC Deko Tree Overviewer",
    "description": "Show STC comment decorator, etc. comment tags in a tree view",
    "keywords": [
        "deko",
        "action",
        "overview",
        "stc"
    ],
    "version": "0.0.146",
    "icon": "resources/stc-deko-icon.png",
    "publisher": "guillaumeisabelle",
    "engines": {
        "vscode": "^1.5.0"
    },
    "license": "SEE LICENSE IN LICENSE.md",
    "repository": "https://github.com/GuillaumeIsabelleX/deko-tree-overviewing",
    "scripts": {
        "test": "qunit -c utils.js -t test/tests.js",
        "pre-release-patch": "npm version patch ; git commit package.json -m \"version published\" ; git push",
        "publish": "npm run pre-release-patch && vsce publish"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./extension",
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "deko-tree-container",
                    "title": "DEKOs",
                    "icon": "resources/deko-tree-container.svg"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "id": "deko-tree-view-explorer",
                    "name": "DEKOs",
                    "when": "deko-tree-has-content && deko-tree-in-explorer"
                }
            ],
            "deko-tree-container": [
                {
                    "id": "deko-tree-view",
                    "name": "DEKOs"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "deko-tree.expand",
                    "when": "view =~ /deko-tree/ && deko-tree-expanded == false && deko-tree-collapsible",
                    "group": "navigation@1"
                },
                {
                    "command": "deko-tree.collapse",
                    "when": "view =~ /deko-tree/ && deko-tree-expanded == true && deko-tree-collapsible",
                    "group": "navigation@1"
                },
                {
                    "command": "deko-tree.showFlatView",
                    "when": "view =~ /deko-tree/ && deko-tree-flat == false && deko-tree-tags-only == false",
                    "group": "navigation@2"
                },
                {
                    "command": "deko-tree.showTagsOnlyView",
                    "when": "view =~ /deko-tree/ && deko-tree-flat == true && deko-tree-tags-only == false",
                    "group": "navigation@2"
                },
                {
                    "command": "deko-tree.showTreeView",
                    "when": "view =~ /deko-tree/ && deko-tree-flat == false && deko-tree-tags-only == true",
                    "group": "navigation@2"
                },
                {
                    "command": "deko-tree.groupByTag",
                    "when": "view =~ /deko-tree/ && deko-tree-grouped == false",
                    "group": "navigation@3"
                },
                {
                    "command": "deko-tree.ungroupByTag",
                    "when": "view =~ /deko-tree/ && deko-tree-grouped == true",
                    "group": "navigation@3"
                },
                {
                    "command": "deko-tree.filter",
                    "when": "view =~ /deko-tree/ && deko-tree-filtered == false",
                    "group": "navigation@4"
                },
                {
                    "command": "deko-tree.filterClear",
                    "when": "view =~ /deko-tree/ && deko-tree-filtered == true",
                    "group": "navigation@4"
                },
                {
                    "command": "deko-tree.refresh",
                    "when": "view =~ /deko-tree/",
                    "group": "navigation@5"
                }
            ]
        },
        "commands": [
            {
                "command": "deko-tree.showFlatView",
                "title": "Show Flat View",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/flat.svg",
                    "light": "resources/icons/light/flat.svg"
                }
            },
            {
                "command": "deko-tree.showTagsOnlyView",
                "title": "Show Tags Only View",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/tags.svg",
                    "light": "resources/icons/light/tags.svg"
                }
            },
            {
                "command": "deko-tree.showTreeView",
                "title": "Show Tree View",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/tree.svg",
                    "light": "resources/icons/light/tree.svg"
                }
            },
            {
                "command": "deko-tree.refresh",
                "title": "Refresh",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/refresh.svg",
                    "light": "resources/icons/light/refresh.svg"
                }
            },
            {
                "command": "deko-tree.expand",
                "title": "Expand Tree",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/expand.svg",
                    "light": "resources/icons/light/expand.svg"
                }
            },
            {
                "command": "deko-tree.collapse",
                "title": "Collapse Tree",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/collapse.svg",
                    "light": "resources/icons/light/collapse.svg"
                }
            },
            {
                "command": "deko-tree.filter",
                "title": "Filter Tree",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/filter.svg",
                    "light": "resources/icons/light/filter.svg"
                }
            },
            {
                "command": "deko-tree.filterClear",
                "title": "Clear Filter",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/clear-filter.svg",
                    "light": "resources/icons/light/clear-filter.svg"
                }
            },
            {
                "command": "deko-tree.groupByTag",
                "title": "Group by Tag",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/tag.svg",
                    "light": "resources/icons/light/tag.svg"
                }
            },
            {
                "command": "deko-tree.ungroupByTag",
                "title": "Ungroup by Tag",
                "category": "Deko Tree",
                "icon": {
                    "dark": "resources/icons/dark/notag.svg",
                    "light": "resources/icons/light/notag.svg"
                }
            },
            {
                "command": "deko-tree.addTag",
                "title": "Add Tag",
                "category": "Deko Tree"
            },
            {
                "command": "deko-tree.removeTag",
                "title": "Remove Tag",
                "category": "Deko Tree"
            },
            {
                "command": "deko-tree.toggleStatusBar",
                "title": "Toggle Status Indication Type",
                "category": "Deko Tree"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Deko Tree",
            "properties": {
                "deko-tree.regex": {
                    "type": "string",
                    "default": "((//|#|<!--|;|/\\*|^)\\s*($TAGS)|^\\s*- \\[ \\])",
                    "markdownDescription": "Regular expression for matching DEKOs. Note: $TAGS will be replaced by the tag list"
                },
                "deko-tree.tags": {
                    "type": "array",
                    "default": [
                        "@v",
                        "@V",
                        "@mc",
                        "@a",
                        "@A",
                        "@startmc",
                        "@startuml",
                        "@bug",
                        "@issue",
                        "@test",
                        "@result",
                        "@i",
                        "@s",
                        "@cr",
                        "@CR",
                        "@goal",
                        "@currentreality",
                        "@stcgoal",
                        "@feature"
                    ],
                    "markdownDescription": "List of tags"
                },
                "deko-tree.rootFolder": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Folder in which to run the search (defaults to the workspace folder)"
                },
                "deko-tree.includeGlobs": {
                    "type": "array",
                    "default": [],
                    "markdownDescription": "Globs for use in limiting search results by inclusion, e.g. `[\"**/unit-tests/*.js\"]` to only show .js files in unit-tests subfolders"
                },
                "deko-tree.excludeGlobs": {
                    "type": "array",
                    "default": [],
                    "markdownDescription": "Globs for use in limiting search results by exclusion (applied after **includeGlobs**), e.g. `[\"**/*.txt\"]` to ignore all .txt files"
                },
                "deko-tree.ripgrep": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Location of your version of ripgrep"
                },
                "deko-tree.debug": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Create a debug channel in the Output view"
                },
                "deko-tree.ripgrepArgs": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Additional arguments to pass to ripgrep (Use with caution!)"
                },
                "deko-tree.regexCaseSensitive": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Use a case sensitive regular expression"
                },
                "deko-tree.showInExplorer": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Show the tree in the explorer view"
                },
                "deko-tree.filterCaseSensitive": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Set to true if you want the view filtering to be case sensitive"
                },
                "deko-tree.autoRefresh": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Refresh the tree when files are opened or saved"
                },
                "deko-tree.highlightDelay": {
                    "type": "integer",
                    "default": 500,
                    "markdownDescription": "Delay before highlighting tags within files (milliseconds)"
                },
                "deko-tree.showTagsFromOpenFilesOnly": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Disable scanning of the workspace for DEKOs"
                },
                "deko-tree.ripgrepMaxBuffer": {
                    "type": "integer",
                    "default": 200,
                    "markdownDescription": "Size of the buffer to use for retrieving output from ripgrep (kilobytes)"
                },
                "deko-tree.trackFile": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Track the current file in the tree view"
                },
                "deko-tree.showBadges": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Show badges and SCM state in the tree view"
                },
                "deko-tree.includedWorkspaces": {
                    "type": "array",
                    "default": [],
                    "markdownDescription": "An array of workspace names to include as roots in the tree (wildcards can be used). An empty array includes all workspace folders."
                },
                "deko-tree.excludedWorkspaces": {
                    "type": "array",
                    "default": [],
                    "markdownDescription": "An array of workspace names to exclude as roots in the tree (wildcards can be used)."
                },
                "deko-tree.defaultHighlight": {
                    "type": "object",
                    "default": {},
                    "markdownDescription": "Default configuration for highlighting. [Read more...](https://github.com/Gruntfuggly/deko-tree#highlighting)"
                },
                "deko-tree.customHighlight": {
                    "type": "object",
                    "default": {},
                    "markdownDescription": "Custom configuration for highlighting, [Read more...](https://github.com/Gruntfuggly/deko-tree#highlighting)"
                },
                "deko-tree.sortTagsOnlyViewAlphabetically": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Sort items in the tags only view alphabetically instead of by file and line number"
                },
                "deko-tree.statusBar": {
                    "type": "string",
                    "enum": [
                        "none",
                        "total",
                        "tags",
                        "top three"
                    ],
                    "markdownEnumDescriptions": [
                        "Only show the scanning status in the status bar",
                        "Show the total number of DEKOs in the status bar",
                        "Show a breakdown of the count of each tag in the status bar",
                        "Show the count of the top three tags in the status bar"
                    ],
                    "default": "none",
                    "markdownDescription": "What to show in the status bar - nothing, total count, or counts per tag"
                },
                "deko-tree.showCountsInTree": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Show counts of DEKOs in the tree"
                },
                "deko-tree.labelFormat": {
                    "type": "string",
                    "default": "${tag} ${after}",
                    "markdownDescription": "Format for tree items"
                },
                "deko-tree.expanded": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show the tree initially fully expanded"
                },
                "deko-tree.grouped": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show the tree initially grouped by tag"
                },
                "deko-tree.flat": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show the tree initially as flat list of files"
                },
                "deko-tree.tagsOnly": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show only tag elements in tree"
                }
            }
        }
    },
    "__metadata": {
        "id": "261cac81-cd7b-4555-bb41-0c2d2bcd3e70",
        "publisherId": "d4906d2e-f2ee-492d-9c7c-02b6160599ec",
        "publisherDisplayName": "Gruntfuggly"
    },
    "dependencies": {
        "comment-patterns": "^0.10.1",
        "micromatch": "^3.1.10",
        "minimatch": "^3.0.4",
        "octicons": "^7.4.0"
    },
    "devDependencies": {
        "node-qunit": "^1.0.0",
        "qunit": "^2.8.0",
        "vscode": "^1.1.33"
    }
}
